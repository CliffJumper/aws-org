name: Reusable workflow to run aws-nuke

on:
  workflow_call:
    inputs:
      working-dir:
        required: false
        type: string
        default: "./"
      region:
        required: false
        type: string
        default: "us-east-1"
    secrets:
      OPS_ROLE_ARN:
        required: true
      ACCOUNT_ID:
        required: true
      BLOCKED_ACCOUNT_ID:
        required: true
      ACCOUNT_ROLE_ARN:
        required: true
      DISCORD_WEBHOOK_URL:
        required: true

jobs:
  NukeAccount-use1:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: ${{ secrets.OPS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.region }}

      - name: Generate config
        working-directory: ${{ inputs.working-dir }}
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          BLOCKED_ACCOUNT_ID: ${{ secrets.BLOCKED_ACCOUNT_ID }}
        run: |
          cat ./config-template.txt | envsubst > nuke-config.yml

      - name: Setup aws-nuke
        working-directory: ${{ inputs.working-dir }}
        run: |
          chmod 0700 ./
          wget https://github.com/ekristen/aws-nuke/releases/download/v3.56.2/aws-nuke-v3.56.2-linux-amd64.tar.gz
          if [ -f ./temp ]; then echo "cleaning temp dir" && rm -f ./temp ; fi
          mkdir temp
          cd ./temp && tar zxvf ../aws-nuke-v3.56.2-linux-amd64.tar.gz
          cd ../

      - name: Run aws-nuke
        id: run-nuke
        working-directory: ${{ inputs.working-dir }}
        env:
          ASSUME_ARN: ${{ secrets.ACCOUNT_ROLE_ARN }}
        run: |
          OUT=$(aws sts assume-role --role-arn ${ASSUME_ARN} --role-session-name gha-assumed)
          export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken')
          ./temp/aws-nuke run -c nuke-config.yml --no-dry-run --no-prompt | tee nukeout.log
          grep "removed$" nukeout.log > removed.log || true #Swallow potential error from grep

      - name: Report
        uses: tsickert/discord-webhook@b217a69502f52803de774ded2b1ab7c282e99645 # v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: NukeLogger
          avatar-url: https://instasize.com/_next/image?url=https%3A%2F%2Fres.cloudinary.com%2Fmunkee%2Fimage%2Fupload%2Fv1684429920%2Finstasize-website%2Flearn%2Favatar-robot-discord.webp&w=828&q=75
          filename: ${{ inputs.working-dir }}/removed.log

  NukeAccount-use2:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: ${{ secrets.OPS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-2

      - name: Generate config
        working-directory: ${{ inputs.working-dir }}
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          BLOCKED_ACCOUNT_ID: ${{ secrets.BLOCKED_ACCOUNT_ID }}
        run: |
          cat ./config-template.txt | envsubst > nuke-config.yml

      - name: Setup aws-nuke
        working-directory: ${{ inputs.working-dir }}
        run: |
          chmod 0700 ./
          wget https://github.com/ekristen/aws-nuke/releases/download/v3.56.2/aws-nuke-v3.56.2-linux-amd64.tar.gz
          if [ -f ./temp ]; then echo "cleaning temp dir" && rm -f ./temp ; fi
          mkdir temp
          cd ./temp && tar zxvf ../aws-nuke-v3.56.2-linux-amd64.tar.gz
          cd ../

      - name: Run aws-nuke
        id: run-nuke
        working-directory: ${{ inputs.working-dir }}
        env:
          ASSUME_ARN: ${{ secrets.ACCOUNT_ROLE_ARN }}
        run: |
          OUT=$(aws sts assume-role --role-arn ${ASSUME_ARN} --role-session-name gha-assumed)
          export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken')
          ./temp/aws-nuke run -c nuke-config.yml --no-dry-run --no-prompt | tee nukeout.log
          grep "removed$" nukeout.log > removed.log || true #Swallow potential error from grep

      - name: Report
        uses: tsickert/discord-webhook@b217a69502f52803de774ded2b1ab7c282e99645 # v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: NukeLogger
          avatar-url: https://instasize.com/_next/image?url=https%3A%2F%2Fres.cloudinary.com%2Fmunkee%2Fimage%2Fupload%2Fv1684429920%2Finstasize-website%2Flearn%2Favatar-robot-discord.webp&w=828&q=75
          filename: ${{ inputs.working-dir }}/removed.log
